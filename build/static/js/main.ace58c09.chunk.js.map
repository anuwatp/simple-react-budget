{"version":3,"sources":["components/AlertMessage.js","components/Header.js","context/AppReducer.js","context/GlobalState.js","components/AddTransaction.js","components/PieChart.js","components/Transaction.js","components/TotalIncome.js","components/TotalExpense.js","components/TransactionList.js","App.js","index.js"],"names":["AlertMessage","useState","show","setShow","variant","Heading","className","onClick","Header","state","action","type","transactions","filter","transaction","id","payload","CurrentDate","today","Date","dd","String","getDate","padStart","getMonth","getFullYear","getCurrentDate","initialState","date","description","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","AddTransaction","setType","setDescription","setAmount","useContext","clearInput","fromElement","Form","Row","as","autoComplete","onSubmit","e","preventDefault","newTransaction","Math","floor","random","Col","xs","md","Control","onChange","target","name","placeholder","min","parseInt","required","Button","PieChart","chartData","setChartData","availableResult","map","reduce","acc","item","savingsResult","expenseResult","debtResult","transactionData","available","savings","expense","debt","push","console","log","useEffect","labels","datasets","data","backgroundColor","options","responsive","title","text","display","fontSize","overlay","Transaction","signType","numberFormat","abs","num","toString","replace","TotalIncome","income","totIncomeComp","availableComp","savingsComp","TotalExpense","totalExpense","totExpElement","expElement","debtElement","TransactionList","Table","striped","bordered","hover","key","App","Container","fluid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ace58c09.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport '../App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as r from 'react-bootstrap';\r\nimport { FiRefreshCcw } from 'react-icons/fi';\r\n\r\nexport const AlertMessage = () => {\r\n    const [show, setShow] = useState(true);\r\n\r\n    return (\r\n        <>\r\n            <r.Alert show={show} variant=\"success\">\r\n                <r.Alert.Heading>Hi! In case you didn't know</r.Alert.Heading>\r\n                <p><strong></strong></p>\r\n                <p> All data will be deleted after refreshing or leaving the website.</p>\r\n                <p>After a transaction click <FiRefreshCcw /> to update the chart.</p>\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <r.Button onClick={() => setShow(false)} variant=\"outline-success\">\r\n                        Hide\r\n                </r.Button>\r\n                </div>\r\n            </r.Alert>\r\n\r\n            { !show && <r.Button className=\"btn-info\" onClick={() => setShow(true)}>Show</r.Button>}\r\n        </>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport function Header() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"mt-5 mb-3 \">Welcome, try add a transaction</h1>\r\n        </div>\r\n    )\r\n};","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n        return {\r\n            ...state, // Send back current state\r\n            transactions: state.transactions.filter(transaction => transaction.id !== action.payload) // Filtering deleted ids\r\n        }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions] // Add new transactions and old ones\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\nexport const CurrentDate = () => {\r\n    let today = new Date();\r\n    const dd = String(today.getDate()).padStart(2, '0');\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    const yyyy = today.getFullYear();\r\n    // Return date format  mm/dd/yyyy\r\n    return today = mm + '/' + dd + '/' + yyyy;\r\n};\r\n\r\nexport const getCurrentDate = () => {\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        let today = new Date();\r\n        const mm = months[today.getMonth()]\r\n        const yyyy = today.getFullYear();\r\n        // Return date format i.e January 2020\r\n    return today = mm + ' ' + yyyy;\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n    transactions: [\r\n        { id: 1, type: 'Income', date: CurrentDate(), description: 'Lorem ipsum', amount: 5000, action: 'Delete' },\r\n        { id: 2, type: 'Savings', date: CurrentDate(), description: 'Lorem ipsum', amount: 2000, action: 'Delete' },\r\n        { id: 3, type: 'Expense', date: CurrentDate(), description: 'Lorem ipsum', amount: -500, action: 'Delete' },\r\n        { id: 4, type: 'Debt', date: CurrentDate(), description: 'Lorem ipsum', amount: -1000, action: 'Delete' }\r\n    ]\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Create provider - so other components can access states\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n};","import React, { useState, useContext } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, Col, Form } from 'react-bootstrap';\r\nimport { GlobalContext, CurrentDate } from '../context/GlobalState';\r\n\r\nexport function AddTransaction() {\r\n    const [type, setType] = useState('Income');\r\n    const [description, setDescription] = useState('');\r\n    const [amount, setAmount] = useState();\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        // Simple ID generator\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            type,\r\n            date: CurrentDate(),\r\n            description,\r\n            amount: type === 'Expense' ? - amount : amount && type === 'Debt' ? - amount : amount,\r\n            action: 'Delete'\r\n        }\r\n        addTransaction(newTransaction);\r\n        clearInput();\r\n    };\r\n\r\n    // Reset input\r\n    const clearInput = () => {\r\n        setDescription('');\r\n        setAmount({});\r\n    };\r\n\r\n    const fromElement = (\r\n        <Form.Row as=\"form\" className=\"custom-container\" autoComplete='off' onSubmit={onSubmit}>\r\n            {/* Select options */}\r\n            <Col xs={12} md={2}>\r\n                <Form.Control as=\"select\" value={type} onChange={(e) => setType(e.target.value)}>\r\n                    <option value=\"Income\">Income</option>\r\n                    <option value=\"Savings\">Savings</option>\r\n                    <option value=\"Expense\">Expense</option>\r\n                    <option value=\"Debt\">Debt</option>\r\n                </Form.Control>\r\n            </Col>\r\n            {/* Description field */}\r\n            <Col xs={12} md={6}>\r\n                <Form.Control type=\"text\" name=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Description\" />\r\n            </Col>\r\n            {/* Amountfield */}\r\n            <Col xs={12} md={2}>\r\n                <Form.Control type=\"number\" min='0' name=\"amount\" value={amount} onChange={(e) => setAmount(parseInt(e.target.value))} placeholder=\"Amount\" required />\r\n            </Col>\r\n            {/* Submit button field */}\r\n            <Col xs={12} md={2}>\r\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n            </Col>\r\n        </Form.Row>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {fromElement}\r\n        </>\r\n    );\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as r from 'react-bootstrap';\r\nimport { FiRefreshCcw } from 'react-icons/fi';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { GlobalContext, getCurrentDate } from '../context/GlobalState';\r\n\r\nexport const PieChart = () => {\r\n    // Assign state\r\n    const [chartData, setChartData] = useState({});\r\n    // Get state\r\n    const { transactions } = useContext(GlobalContext);\r\n    // Get available amount\r\n    const availableAmounts = transactions.map(transaction => transaction.type === 'Savings' ? - transaction.amount : transaction.amount);\r\n    const availableResult = availableAmounts.reduce((acc, item) => (acc += item), 0);\r\n    // Get savings amount\r\n    const savingsAmounts = transactions.map(transaction => transaction.type === 'Savings' ? transaction.amount : null);\r\n    const savingsResult = savingsAmounts.reduce((acc, item) => (acc += item), 0);\r\n    // Get expense amount\r\n    const expenseAmounts = transactions.map(transaction => transaction.type === 'Expense' ? transaction.amount : null);\r\n    const expenseResult = expenseAmounts.reduce((acc, item) => (acc += item), 0);\r\n    // Get debt amount\r\n    const debtAmounts = transactions.map(transaction => transaction.type === 'Debt' ? transaction.amount : null);\r\n    const debtResult = debtAmounts.reduce((acc, item) => (acc += item), 0);\r\n\r\n    // Save data in an object\r\n    let transactionData = {\r\n        available: [],\r\n        savings: [],\r\n        expense: [],\r\n        debt: []\r\n    }\r\n    // Push data to chartAmountData object\r\n    transactionData.available.push(availableResult);\r\n    transactionData.savings.push(savingsResult);\r\n    transactionData.expense.push(expenseResult);\r\n    transactionData.debt.push(debtResult);\r\n\r\n    // Chart config\r\n    let chartConfig = () => {\r\n        setChartData({\r\n            labels: ['Available', 'Savings', 'Expenses', 'Debts'],\r\n            datasets: [\r\n                {\r\n                    data: [transactionData.available, transactionData.savings, transactionData.expense, transactionData.debt],\r\n                    backgroundColor: ['lightgreen', 'MediumSlateBlue', 'red', 'brown']\r\n                }\r\n            ],\r\n            options: {\r\n                responsive: true,\r\n                title: { text: getCurrentDate(), display: true, fontSize: 40 }\r\n            }\r\n        });\r\n    };\r\n    console.log(chartData);\r\n\r\n    const updateChart = () => {\r\n        setChartData({\r\n            datasets: [\r\n                {\r\n                    data: [transactionData.available, transactionData.savings, transactionData.expense, transactionData.debt]\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    // Tell component to do something after render\r\n    useEffect(() => {\r\n        chartConfig();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"custom-container flex-fill\">\r\n            <r.OverlayTrigger overlay={<r.Tooltip id=\"tooltip-disabled\">Refresh chart</r.Tooltip>}>\r\n                <span className=\"d-inline-block btnRefresh\" onClick={() => updateChart()}>\r\n                    <FiRefreshCcw />\r\n                </span>\r\n            </r.OverlayTrigger>\r\n            <Pie data={chartData} options={chartData.options} />\r\n        </div>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n    // Get state\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    // If positive number + else -\r\n    const signType = transaction.amount < 0 ? '-' : '+';\r\n\r\n    return (\r\n        <tr>\r\n            <td>{transaction.type}</td>\r\n            <td>{transaction.date}</td>\r\n            <td>{transaction.description}</td>\r\n            <td>{signType}${numberFormat(Math.abs(transaction.amount))}</td>\r\n            <td className=\"btn btn-outline-danger btn-block rounded-0\" onClick={() => deleteTransaction(transaction.id)}>{transaction.action}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n// Format numbers if digits > 3\r\nexport function numberFormat(num) {\r\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}","import React, { useContext } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberFormat } from './Transaction';\r\n\r\nexport function TotalIncome() {\r\n    // Declare a new state\r\n    const { transactions } = useContext(GlobalContext);\r\n    // Get income amount\r\n    const incomeAmounts = transactions.map(transaction => transaction.type === 'Income' ? transaction.amount : 0);\r\n    const income = incomeAmounts.reduce((acc, item) => acc += item, 0);\r\n    // Get available amount\r\n    const amounts = transactions.map(transaction => transaction.type === 'Savings' ? - transaction.amount : transaction.amount);\r\n    const available = amounts.reduce((acc, item) => (acc += item), 0);\r\n    // Get savings amount\r\n    const savingAmounts = transactions.map(transaction => transaction.type === 'Savings' ? transaction.amount : 0);\r\n    const savings = savingAmounts.reduce((acc, item) => acc += item, 0);\r\n\r\n    const totIncomeComp = (\r\n        <div className=\"custom-container\">\r\n            <h3>Total income</h3>\r\n            <h1>${numberFormat(income)}</h1>\r\n        </div>\r\n    );\r\n \r\n    const availableComp = (\r\n        <div className=\"custom-container\">\r\n            <h4>Available</h4>\r\n            <h2 className={available >= 0 ? '' : 'text-danger'}>${numberFormat(available)}</h2>\r\n        </div>\r\n    );\r\n\r\n    const savingsComp = (\r\n        <div className=\"custom-container\">\r\n            <h4>Savings</h4>\r\n    <h2>${numberFormat(savings)}</h2>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"flex-fill\">\r\n            {totIncomeComp}\r\n            {availableComp}\r\n            {savingsComp}\r\n        </div>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { numberFormat } from './Transaction';\r\n\r\nexport function TotalExpense() {\r\n    // Declare a new state\r\n    const { transactions } = useContext(GlobalContext);\r\n    // Get total expense amount\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const totalExpense = amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0);\r\n    // Get expense amount\r\n    const expenseAmounts = transactions.map(transaction => transaction.type === 'Expense' ? transaction.amount : 0);\r\n    const expenseResult = expenseAmounts.reduce((acc, item) => (acc += item), 0);\r\n    // Get debt amount\r\n    const debtAmounts = transactions.map(transaction => transaction.type === 'Debt' ? transaction.amount : 0);\r\n    const debtResult = debtAmounts.reduce((acc, item) => (acc += item), 0);\r\n\r\n    const totExpElement = (\r\n        <div className=\"custom-container\">\r\n            <h3>Total expense</h3>\r\n            <h1 className=\"text-danger\">${numberFormat(Math.abs(totalExpense))}</h1>\r\n        </div>\r\n    );\r\n    const expElement = (\r\n        <div className=\"custom-container\">\r\n            <h4>Expense</h4>\r\n            <h2 className=\"text-danger\">${numberFormat(Math.abs(expenseResult))}</h2>\r\n        </div>\r\n    );\r\n    const debtElement = (\r\n        <div className=\"custom-container\">\r\n            <h4>Debt</h4>\r\n            <h2 className=\"text-danger\">${numberFormat(Math.abs(debtResult))}</h2>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"flex-fill\">\r\n            {totExpElement}\r\n            {expElement}\r\n            {debtElement}\r\n        </div>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Table, Row, Col, Pagination } from 'react-bootstrap';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport function TransactionList() {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div className=\"custom-container\">\r\n            <Row>\r\n                <Col className=\"text-center mb-4\">\r\n                    <h1>History</h1>\r\n                </Col>\r\n            </Row>\r\n            {/* Transaction list */}\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Type</th>\r\n                        <th>Date</th>\r\n                        <th>Description</th>\r\n                        <th>Amount</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}\r\n                </tbody>\r\n            </Table>\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { AlertMessage } from './components/AlertMessage';\r\nimport { Header } from './components/Header';\r\nimport { AddTransaction } from './components/AddTransaction';\r\nimport { PieChart } from './components/PieChart';\r\nimport { TotalIncome } from './components/TotalIncome';\r\nimport { TotalExpense } from './components/TotalExpense';\r\nimport { TransactionList } from './components/TransactionList';\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <Container fluid>\r\n        <Row>\r\n          <div className=\"col-xl-2\">\r\n            <AlertMessage />\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"overview\">\r\n              <Header />\r\n              <AddTransaction />\r\n              <div className=\"d-flex flex-column flex-lg-row\">\r\n                <PieChart />\r\n                <div className=\"d-flex flex-column flex-sm-row\">\r\n                  <TotalIncome />\r\n                  <TotalExpense />\r\n                </div>\r\n              </div>\r\n              <TransactionList />\r\n            </div>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App; \r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}